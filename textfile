insert into agent values(401,'BHARATH GAS AGENCY',201,250,150,'available');
insert into agent values(402,'HINDUSTAN GAS AGENCY',201,250,0,'not available');
insert into agent values(403,'AVENGERS GAS AGENCY',202,250,50,'available');
insert into agent values(404,'VEERAPPA GAS AGENCY',205,250,250,'available');

insert into city values(301,'brahmavara',201);
insert into city values(302,'kundapura',201);
insert into city values(303,'barkur',201);
insert into city values(304,'santekatte',201);
insert into city values(305,'manipal',201);
insert into city values(306,'kadri',202);
insert into city values(307,'kavoor',202);
insert into city values(308,'kottara',202);
insert into city values(309,'katil',202);
insert into city values(310,'vaynad',205);
insert into city values(311,'shabarimale',205);
insert into city values(312,'taj',209);
insert into city values(313,'lacknow',209);
insert into city values(314,'maran',210);
insert into city values(315,'puran',210);


insert into district values(201,'udupi',101);
insert into district values(202,'mangalore',101);
insert into district values(203,'bangalore',101);
insert into district values(204,'belgam',101);
insert into district values(205,'kochi',103);
insert into district values(206,'chennai',104);
insert into district values(207,'kannur',103);
insert into district values(208,'hyderabad',106);
insert into district values(209,'agra',105);
insert into district values(210,'saran',102);

insert into state values(101,'karnataka');
insert into state values(102,'bihar');
insert into state values(103,'kerala');
insert into state values(104,'tamilnadu');
insert into state values(105,'delhi');
insert into state values(106,'andrapradesh');

insert into user_reg values(1001,'prasanna','poojari','male','8970199276','agrahara',101,201,301,501,401,'p.jon','pra@gmail.com','trr','prasanna');
insert into user_reg values(1002,'prakash','poojari','male','9148065898','chintanpur',103,205,310,501,404,'ttjon','corey@gmail.com','trr','password');

insert into connection_type values(501,'domestic',450,780);
insert into connection_type values(502,'comercial',650,980);

    AgencyName = SelectField('AgencyName', choices =[('BHARATH GAS AGENCY','BHARATH GAS AGENCY'),('HINDUSTAN GAS AGENCY','HINDUSTAN GAS AGENCY'),('AVENGERS GAS AGENCY','AVENGERS GAS AGENCY'),('VEERAPPA GAS AGENCY','VEERAPPA GAS AGENCY')])
 aname = agent.query.filter_by(agency_name=form.AgencyName.data).first()
        aid=aname.aid

         <div class="form-group col-md-6">
                  <div class="form-group">
                    {{ form.AgencyName.label(class="form-control-label") }}

                    {% if form.AgencyName.errors %}
                        {{ form.AgencyName(class="form-control form-control-sm is-invalid") }}
                        <div class="invalid-feedback">
                            {% for error in form.AgencyName.errors %}
                                <span>{{ error }}</span>
                            {% endfor %}
                        </div>
                    {% else %}
                        {{ form.AgencyName(class="form-control form-control-sm") }}
                    {% endif %}
                </div>
            </div>

                agency_name = db.Column(db.String(40),unique=True,nullable=False)
                 did = db.Column(db.Integer,db.ForeignKey(district.did),nullable=False)
{% elif current_user.is_authenticated %}
<li class="nav-item">
  <a class="nav-link" href="adumin">account</a>
</li>
<li class="nav-item">
  <a class="nav-link" href="logout">logout</a>
</li>
{% elif current_user.is_authenticated and current_user.agent_name %}
<li class="nav-item">
  <a class="nav-link" href="Distributor">account</a>
</li>
<li class="nav-item">
  <a class="nav-link" href="logout">logout</a>
</li>
@app.route("/Dlogin", methods=['GET', 'POST'])
def Dlogin():
    if current_user.is_authenticated:
        return redirect(url_for('home'))
    form = LoginForm()
    if form.validate_on_submit():
        user = agent.query.filter_by(email=form.email.data).first()
        if user and bcrypt.check_password_hash(user.password,form.password.data):
            login_user(user,remember=form.remember.data)
            next_page = request.args.get('next')
            return redirect(next_page) if next_page else redirect(url_for('home'))
        else:
            flash('Login Unsuccessful2. Please check username and password', 'danger')
    return render_template('dlogin.html', title='DLogin', form=form)

@app.route("/Alogin", methods=['GET', 'POST'])
def Alogin():
    if current_user.is_authenticated:
        return redirect(url_for('home'))
    form = LoginForm()
    if form.validate_on_submit():
        user = adumin.query.filter_by(email=form.email.data).first()
        if user and bcrypt.check_password_hash(user.password,form.password.data):
            login_user(user,remember=form.remember.data)
            next_page = request.args.get('next')
            return redirect(next_page) if next_page else redirect(url_for('home'))
        else:
            flash('Login Unsuccessful3. Please check email and password', 'danger')
    return render_template('Alogin.html', title='Login', form=form)

    @app.route("/login", methods=['GET', 'POST'])
def login():
    if current_user.is_authenticated:
        return redirect(url_for('home'))
    form = LoginForm()
    if form.validate_on_submit():
        user = User_reg.query.filter_by(email=form.email.data).first()
        if user and bcrypt.check_password_hash(user.password,form.password.data):
            login_user(user,remember=form.remember.data)
            next_page = request.args.get('next')
            return redirect(next_page) if next_page else redirect(url_for('home'))
        else:
            flash('Login Unsuccessful1. Please check email and password', 'danger')
    return render_template('login.html', title='Login', form=form)
